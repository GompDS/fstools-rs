[package]
name = "fstools"
edition.workspace = true
version.workspace = true
license.workspace = true
repository.workspace = true
authors.workspace = true

[dependencies]
fstools_formats.workspace = true
fstools_dvdbnd.workspace = true
fstools_oodle_rt.workspace = true

[dev-dependencies]
criterion = "0.5"
fstools_elden_ring_support.workspace = true
insta = "1"
libtest-mimic = "0.7"

[[bench]]
name = "vfs"
harness = false

[[test]]
name = "dcx"
path = "tests/dcx.rs"
harness = false

[workspace]
resolver = "2"
members = [
    "crates/asset-server",
    "crates/cli",
    "crates/dvdbnd",
    "crates/formats",
    "crates/oodle-rt",
    "crates/viewer",
]

[workspace.package]
version = "0.1.0"
license = "MIT AND Apache-2.0"
edition = "2021"
repository = "https://github.com/soulsmods/fstools-rs"
authors = ["Gary Tierney", "Vincent Swarte"]

[workspace.lints.clippy]
doc_markdown = "warn"
manual_let_else = "warn"
undocumented_unsafe_blocks = "warn"
redundant_else = "warn"
match_same_arms = "warn"
semicolon_if_nothing_returned = "warn"
ptr_as_ptr = "warn"
ptr_cast_constness = "warn"
unwrap_used = "warn"

[workspace.dependencies]
fstools = { path = ".", version = "0.1.0" }
fstools_formats = { path = "crates/formats", version = "0.1.0" }
fstools_dvdbnd = { path = "crates/dvdbnd", version = "0.1.0" }
fstools_asset_server = { path = "crates/asset-server", version = "0.1.0" }
fstools_elden_ring_support = { path = "crates/support/elden_ring", version = "0.1.0" }
fstools_oodle_rt = { path = "crates/oodle-rt", version = "0.1.0" }
memmap2 = "0.9.4"
rayon = "1"
serde = "1"
steamlocate = "=2.0.0-beta.2"
thiserror = "1"

# Config for 'cargo dist'
[workspace.metadata.dist]
allow-dirty = ["ci"]
# The preferred cargo-dist version to use in CI (Cargo.toml SemVer syntax)
cargo-dist-version = "0.11.1"
# CI backends to support
ci = ["github"]
# The installers to generate for each app
installers = ["shell", "powershell"]
# Target platforms to build apps for (Rust target-triple syntax)
targets = ["x86_64-unknown-linux-gnu", "x86_64-pc-windows-msvc"]
# Publish jobs to run in CI
pr-run-mode = "plan"

[workspace.metadata.dist.dependencies.apt]
libasound2-dev = "*"
libudev-dev = "*"

# The profile that 'cargo dist' will build with
[profile.dist]
inherits = "release"
lto = "thin"
